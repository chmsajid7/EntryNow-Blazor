@page "/entries/index"
@attribute [Authorize]
@inject EntryNow.Web.Services.Interface.IAlertService AlertService
@*@inject EntryNow.Web.Services.Interface.IAccountService AccountService*@

<h1>Entries</h1>
<NavLink href="entries/add" class="btn btn-sm btn-success mb-2">
    <span class="oi oi-plus" aria-hidden="true"></span>  New Entries
</NavLink>
<table class="table table-striped">
    <thead>
        <tr>
            <th style="width: 30%">Name</th>
            <th style="width: 30%">Surname</th>
            <th style="width: 30%">Contact</th>
            <th style="width: 30%">CNIC</th>
            <th style="width: 30%">Reference</th>
            <th style="width: 30%">Union Counsil</th>
            <th style="width: 30%">Taluka</th>
            <th style="width: 30%">Deh</th>
            <th style="width: 30%">Village</th>
            <th style="width: 30%">City</th>
            <th style="width: 30%">Address</th>
            <th style="width: 10%"></th>
        </tr>
    </thead>
    <tbody>
        @if (entries != null)
        {
            foreach (var entrie in entries)
            {
                <tr>
                    <td>@entrie.Name</td>
                    <td>@entrie.Surname</td>
                    <td>@entrie.ContactNumber</td>
                    <td>@entrie.CNIC</td>
                    <td>@entrie.Reference</td>
                    <td>@entrie.UnionCounsil</td>
                    <td>@entrie.Taluka</td>
                    <td>@entrie.Deh</td>
                    <td>@entrie.Village</td>
                    <td>@entrie.City</td>
                    <td>@entrie.Address</td>
                    <td style="white-space: nowrap">
                        <NavLink href="@($"users/edit/{entrie.Id}")" class="btn btn-sm btn-primary mr-1">Edit</NavLink>
       @*                 <button @onclick="@(() => DeleteUser(entrie.Id))" disabled="@entrie.IsDeleting" class="btn btn-sm btn-danger btn-delete-user">
                            @if (entrie.IsDeleting)
                            {
                                <span class="spinner-border spinner-border-sm"></span>
                            }
                            else
                            {
                                <span>Delete</span>
                            }
                        </button>*@
                    </td>
                </tr>
            }
        }
        @if (loading)
        {
            <tr>
                <td colspan="4" class="text-center">
                    <span class="spinner-border spinner-border-lg align-center"></span>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private const int page = 1;
    private const int pageSize = 1000;
    private bool loading;
    private IList<Entries> entries;
    private readonly System.Net.Http.HttpClient _httpClient;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        await GetData();
        loading = false;
    }

    private async Task GetData()
    {
        try
        {
            using (System.Net.Http.HttpClient httpClient = new System.Net.Http.HttpClient())
            {
                using (System.Net.Http.HttpResponseMessage response = await httpClient.GetAsync("https://entrynowapi.azurewebsites.net/api/voter/get?pageNumber=" + page + "&perPage=" + pageSize))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    entries = Newtonsoft.Json.JsonConvert.DeserializeObject<IList<Entries>>(apiResponse);
                }
            }
        }
        catch(Exception e)
        {
            AlertService.Error(e.Message);
            loading = false;
            StateHasChanged();
        }
    }

    private async void DeleteUser(string id)
    {
        //var user = users.First(x => x.Id == id);
        //user.IsDeleting = true;
        //await AccountService.Delete(id);
        //users.Remove(user);
        //StateHasChanged();
    }
}