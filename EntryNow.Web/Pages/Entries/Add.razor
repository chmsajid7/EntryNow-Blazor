@page "/entries/add"
@attribute [Authorize]
@inject EntryNow.Web.Services.Interface.IAlertService AlertService
@inject NavigationManager NavigationManager

<h1>Add User</h1>
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-row">
        <div class="form-group col">
            <label>First Name</label>
            <InputText @bind-Value="model.Name" class="form-control" />
            <ValidationMessage For="@(() => model.Name)" />
        </div>
        <div class="form-group col">
            <label>Last Name</label>
            <InputText @bind-Value="model.Surname" class="form-control" />
            <ValidationMessage For="@(() => model.Surname)" />
        </div>
        <div class="form-group col">
            <label>Last Name</label>
            <InputText @bind-Value="model.ContactNumber" class="form-control" />
            <ValidationMessage For="@(() => model.ContactNumber)" />
        </div>
    </div>
    <div class="form-row">
      @*  <div class="form-group col">
            <label>Username</label>
            <InputText @bind-Value="model.EmailAddress" class="form-control" />
            <ValidationMessage For="@(() => model.EmailAddress )" />
        </div>
        <div class="form-group col">
            <label>Username</label>
            <InputText @bind-Value="model.CNIC" class="form-control" />
            <ValidationMessage For="@(() => model.CNIC)" />
        </div>
        <div class="form-group col">
            <label>Username</label>
            <InputText @bind-Value="model.District" class="form-control" />
            <ValidationMessage For="@(() => model.District)" />
        </div>*@
    </div>
    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            Save
        </button>
        <NavLink href="users" class="btn btn-link">Cancel</NavLink>
    </div>
</EditForm>

@code {
    private Entries_ViewModel model = new Entries_ViewModel();
    private bool loading;

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            //await AccountService.Register(model);
            AlertService.Success("User added successfully", keepAfterRouteChange: true);
            NavigationManager.NavigateTo("users");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}